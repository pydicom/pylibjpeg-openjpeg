name: release-deploy

on:
  pull_request:
  release:
    types: [ published ]

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows 32 bit
          - os: windows-latest
            python: 37
            platform_id: win32
          - os: windows-latest
            python: 38
            platform_id: win32
          - os: windows-latest
            python: 39
            platform_id: win32
          - os: windows-latest
            python: 310
            platform_id: win32

          # Windows 64 bit
          - os: windows-latest
            python: 37
            platform_id: win_amd64
          - os: windows-latest
            python: 38
            platform_id: win_amd64
          - os: windows-latest
            python: 39
            platform_id: win_amd64
          - os: windows-latest
            python: 310
            platform_id: win_amd64

          # Linux 64 bit manylinux2010
          - os: ubuntu-latest
            python: 37
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2010
          - os: ubuntu-latest
            python: 38
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2010

          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python: 37
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 38
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # MacOS x86_64
          - os: macos-latest
            python: 37
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 38
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 39
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 310
            platform_id: macosx_x86_64

          # MacOS arm64
          - os: macos-latest
            python: 38
            platform_id: macosx_arm64
          - os: macos-latest
            python: 39
            platform_id: macosx_arm64
          - os: macos-latest
            python: 310
            platform_id: macosx_arm64

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.9'

    - name: Install cibuildwheel
      run: |
        python -m pip install -U pip
        python -m pip install cibuildwheel==2.3.1

    - name: Build sdist
      run: |
         python setup.py sdist

    - name: Build wheels
      env:
        CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
        CIBW_ARCHS: all
        CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
        CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
        CIBW_BUILD_VERBOSITY: 1
        CIBW_BEFORE_BUILD_MACOS: ls -a && rm -rf .eggs/numpy*.egg 
      run: |
        python --version
        python -m cibuildwheel --output-dir dist

    - name: Store artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: ./dist

  # The pypi upload fails with non-linux containers, so grab the uploaded
  #     artifacts and run using those
  # See: https://github.com/pypa/gh-action-pypi-publish/discussions/15
  deploy:
    name: Upload wheels to PyPI
    needs:
    - build_wheels
    runs-on: ubuntu-latest

    steps:
    - name: Download the wheels
      uses: actions/download-artifact@v2
      with:
        name: wheels
        path: dist/

    #- name: Publish package to Test PyPi
    #  uses: pypa/gh-action-pypi-publish@master
    #  with:
    #    user: __token__
    #    password: ${{ secrets.TEST_PYPI_PASSWORD }}
    #    repository_url: https://test.pypi.org/legacy/

    - name: Publish package to PyPi
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}

  test-pypi:
    name: Test uploaded PyPI package
    needs:
    - deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install wheel
        python -m pip install pytest coverage pytest-cov
        python -m pip install pydicom pylibjpeg
        python -m pip install git+https://github.com/pydicom/pylibjpeg-data

    - name: Install package wheels and test
      run: |
        pip install pylibjpeg-openjpeg --no-binary :all:
        pytest --cov openjpeg --ignore=openjpeg/src/openjpeg

    - name: Install package tarballs and test
      run: |
        pip uninstall pylibjpeg-openjpeg -y
        pip install pylibjpeg-openjpeg --no-binary :all:
        pytest --ignore=openjpeg/src/openjpeg
